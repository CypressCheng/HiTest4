// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7095.HiTest4;

import org.usfirst.frc7095.HiTest4.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;
import org.usfirst.frc7095.HiTest4.subsystems.*;

public class OI {
    public Joystick joystick;//Port 0
    public JoystickButton sucker;//Button 1
    public JoystickButton suckerReverse;//Button 2
    public JoystickButton wing;//Button 3
    public JoystickButton wingReverse;//Button 4
    public JoystickButton turbo;//Button 5
    public JoystickButton cruise;//Button 6
    public JoystickButton turboReverse;//Button 7
    public JoystickButton cruiseReverse;//Button 8

    public double getLeftYVelocity() {
    	return joystick.getRawAxis(1);//Get value from left y-axis to control left motors.
    }
    
    public double getRightYVelocity() {
    	return joystick.getRawAxis(5);//Get value from right y-axis to control right motors.
    }
    
    public OI() {
        joystick = new Joystick(0);//Logitech Gamepad F310 Joystick at port 0
        sucker = new JoystickButton(joystick, 1);//Joystick Button 1(A)
        sucker.whileHeld(new SuckerRotate());
        suckerReverse = new JoystickButton(joystick, 2);//Joystick Button 2(B)
        suckerReverse.whileHeld(new SuckerReverse());
        wing = new JoystickButton(joystick, 3);//Joystick Button 3(X)
        wing.whileHeld(new WingRotate());
        wingReverse = new JoystickButton(joystick, 4);//Joystick Button 4(Y)
        wingReverse.whileHeld(new WingReverse());
        turbo = new JoystickButton(joystick, 5);//Joystick Button 5(LB)
        turbo.whenPressed(new Turbo());
        cruise = new JoystickButton(joystick, 6);//Joystick Button 6(RB)
        cruise.whenPressed(new Cruise());
        turboReverse = new JoystickButton(joystick, 7);//Joystick Button 7(Back)
        turboReverse.whenPressed(new TurboReverse());//For test only
        cruiseReverse = new JoystickButton(joystick, 8);//Joystick Button 8(Start)
        cruiseReverse.whenPressed(new CruiseReverse());//For test only
        // Add buttons in SmartDashboard
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("SuckerRotate", new SuckerRotate());
        SmartDashboard.putData("SuckerReverse", new SuckerReverse());
        SmartDashboard.putData("WingRotate", new WingRotate());
        SmartDashboard.putData("WingReverse", new WingReverse());
        SmartDashboard.putData("Cruise", new Cruise());
        SmartDashboard.putData("Turbo", new Turbo());
        SmartDashboard.putData("CruiseReverse", new CruiseReverse());//For test only
        SmartDashboard.putData("TurboReverse", new TurboReverse());//For test only
    }
    public Joystick getJoystick() {
        return joystick;
    }
}

