// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7095.HiTest4;

import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.Scheduler;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.cscore.UsbCamera;
import org.usfirst.frc7095.HiTest4.commands.*;
import org.usfirst.frc7095.HiTest4.subsystems.*;

public class Robot extends TimedRobot {

    Command autonomousCommand;
    SendableChooser<Command> chooser = new SendableChooser<>();

    public static OI oi;
    public static Base base;
    public static Sucker sucker;
    public static Wing wing;

    @Override
    public void robotInit() {
        RobotMap.init();
        base = new Base();
        sucker = new Sucker();
        wing = new Wing();
        oi = new OI();
        chooser.addDefault("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("Auto mode", chooser);
        UsbCamera cam0 = CameraServer.getInstance().startAutomaticCapture(0);
        cam0.setResolution(1280, 720);
        cam0.setFPS(30);
        UsbCamera cam1 = CameraServer.getInstance().startAutomaticCapture(1);
        cam1.setResolution(1280, 720);
        cam1.setFPS(30);
    }

    @Override
    public void disabledInit(){

    }

    @Override
    public void disabledPeriodic() {
        Scheduler.getInstance().run();
    }

    @Override
    public void autonomousInit() {
        autonomousCommand = chooser.getSelected();
        if (autonomousCommand != null) autonomousCommand.start();
    }

    @Override
    public void autonomousPeriodic() {
        Scheduler.getInstance().run();
    }

    @Override
    public void teleopInit() {
        if (autonomousCommand != null) autonomousCommand.cancel();
    }

    @Override
    public void teleopPeriodic() {
        Scheduler.getInstance().run();
    }
}
